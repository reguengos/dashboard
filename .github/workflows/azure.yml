# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on: push


env:
  AZURE_WEBAPP_NAME: dopsdashboard    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
       node-version: [10.x, 12.x, 13.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build, and test
      run: |
        yarn install
        yarn build
        yarn test
    
    - name: npm install, build and test
      run: |
        npm install
        npm run build --if-present
    
 
    - name: Docker Build, Tag & Push
      uses: belon/docker-build-push@v4.0
      with:
        # Name of the Docker image
        image: ${{ secrets.AZURE_ACR_REPOSITORY }}
        # Tags override for Docker image
        tags: latest
        # Target Docker registry
        registry: ${{ secrets.AZURE_ACR_SERVER }}
        
        username: ${{ secrets.AZURE_ACR_USER }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.AZURE_ACR_PASS }}
